version: "3.8"

x-celery-worker-defaults: &celery-worker-defaults
  command: /bin/bash -c "/app/entrypoint.celery.sh"
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - ./.env
    #- ./template.env
  depends_on:
    - redis_workers
  restart: unless-stopped
  # TODO: Sacar
  volumes:
    - ./src:/app
  stop_grace_period: 5s

x-python-defaults: &python-defaults
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - ./.env
    #- ./template.env
  volumes:
      - ./src:/app
  stop_grace_period: 5s

services:
  api_workers:
    container_name: api_workers
    command: /bin/bash -c "/app/entrypoint.api.sh"
    <<: *python-defaults
    expose:
      - 8001
    ports:
      - 8001:8001
    restart: unless-stopped
    depends_on:
      - redis_workers

  celery_workers:
    container_name: celery_workers
    <<: *celery-worker-defaults

  celery_workers_2:
    container_name: celery_worker_2
    <<: *celery-worker-defaults

  celery_workers_3:
    container_name: celery_workers_3
    <<: *celery-worker-defaults

  celery_workers_4:
    container_name: celery_worker_4
    <<: *celery-worker-defaults

  pytest_workers:
    container_name: pytest_workers
    command: /bin/bash -c "/app/entrypoint.pytest.sh"
    <<: *python-defaults
    depends_on:
      - redis_workers
      - celery_workers
      - celery_workers_2
      - celery_workers_3
      - celery_workers_4
      - api_workers
    restart: no

  redis_workers:
    container_name: redis_workers
    image: redis:7.2-alpine
    volumes:
      - 'redis:/var/lib/redis'
    ports:
      - 6379:6379
    restart: unless-stopped

volumes:
  redis:
