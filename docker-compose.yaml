version: '3'
services:
  api:
    build:
      context: ./API
      #dockerfile: production.Dockerfile
      dockerfile: development.Dockerfile
      args:
        LOCAL_PORT: ${API_PORT}
        NODE_VERSION: ${API_NODE_VERSION:-16}
    env_file:
      - .env
    restart: unless-stopped
    # Comentar la siguiente línea para producción:
    volumes:
      - ./API:/usr/src/app
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    depends_on:
      - db

  mqtt:
    build:
      context: ./MQTT
      #dockerfile: production.Dockerfile
      dockerfile: development.Dockerfile
      args:
        MQTT_PORT: ${MQTT_PORT:-8001}
        NODE_VERSION: ${MQTT_API_NODE_VERSION:-16}
    # Comentar la siguiente línea para producción:
    volumes:
      - ./MQTT:/usr/src/app
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${MQTT_PORT:-8001}:${MQTT_PORT:-8001}"

  db:
    image: postgres:12.8
    volumes:
      - postgres_data156513:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT:-5432}
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"

volumes:
  postgres_data156513:
